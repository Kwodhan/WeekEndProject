<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
      http://www.springframework.org/schema/mvc 
      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">


	<mvc:cors>

		<mvc:mapping path="/**" allowed-origins="*"
			allowed-methods="*" max-age="123" />
	</mvc:cors>
	<http auto-config='true'>

        <intercept-url pattern="/sites/**" access="hasRole('ROLE_GERANT')"/>
        
		<http-basic />
		<csrf disabled="true" />
		<cors />
	</http>

<!--     <security:http
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager"
            create-session="stateless">
        <security:csrf disabled="true"/>
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER"/>
        <security:intercept-url pattern="/rest/user/authenticate" access="permitAll"/>
        <security:intercept-url method="GET" pattern="/rest/blogposts/**" access="hasRole('USER')"/>
        <security:intercept-url method="PUT" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
        <security:intercept-url method="POST" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
        <security:intercept-url method="DELETE" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
    </security:http> -->

	<mvc:annotation-driven />


	<beans:bean id="userDetailsService"
		class="fr.istic.taa.weekEndProject.service.UserDetailsServiceImpl" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="encoder" />


		</authentication-provider>
	</authentication-manager>



	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">

	</beans:bean>

</beans:beans>